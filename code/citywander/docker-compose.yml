version: '1'
services:   
  citywander-service:
    container_name: citywander-service
    build:
      context: ./dockerfile-service
      dockerfile: Dockerfile
    ports:
      - "${TOMCAT_HRS_PORT}:8080"
      - "${TOMCAT_HRS_PORT_DEBUG}:8000"
    environment:
      DB_USERNAME: ${DB_POSTGRES_USERNAME}
      DB_PWD: ${DB_POSTGRES_PWD}
      DB_URL: ${DB_POSTGRES_URL}
      DB_MONGO_USR: ${DB_MONGO_USERNAME}
      DB_MONGO_PW: ${DB_MONGO_PWD}
      DB_MONGO_NAME: ${MONGO_DB_NAME}
      DB_MONGO_PORT: ${MONGO_DB_PORT}
      DB_MONGO_SRV: ${MONGODB_SERVER}
      DB_MONGO_AUTH: ${MONGO_AUTH}
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,address=*:8000,server=y,suspend=n
    volumes:
      - ./jarFile/citywander.jar:/app/app.jar
      - ./logs/citywander/:/app/logs/
    depends_on:
      postgres-database:
        condition: service_started
      mongo-database:
        condition: service_healthy
    networks:
      - ms-network    
  postgres-database:
    image: postgis/postgis:12-3.1-alpine
    container_name: ms-postgres-database
    environment: 
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ms-pgsqldb:/var/lib/postgresql/data
      - ./database/postgres/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
      - ./database/postgres/init_sql:/init_sql
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - ms-network      
  ms-pgadmin:
    image: dpage/pgadmin4:6.8
    container_name: ms-pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - ms-network
    depends_on:
      - postgres-database
  mongo-database:
    image: mongo
    container_name: ms-mongo
#    restart: always
    ports:
      - "${MONGO_DB_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    healthcheck:
      test: ["CMD", "mongosh", "--port 27017", "--eval"," 'db.adminCommand({ ping: 1 })'"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    volumes:        
      - ms-mongo:/data/db
    networks:
      - ms-network
  mongo-express:
    image: mongo-express
    container_name: ms-mongo-express
#    restart: always
    ports:
      - "${MONGO_EXPRESS_PORT}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${MONGODB_SERVER}
    depends_on:
      mongo-database:
        condition: service_healthy
    networks:
      - ms-network
networks:
  ms-network:
    driver: bridge
volumes:
  ms-pgsqldb:
  ms-mongo:
